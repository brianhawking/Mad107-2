Blackhawks Recipe

Ingredients

1.  Variables

	a. currentDate (so I can figure out the player's age). 
		- use Apple's Calendar from date to get the year and month

	b. roster Dictionary
		- I want to try to build this dictionary to mimic a struct as much as possible.
		- The key will be their number and value will be a tuple with all their information.

		- My idea:
			key: Int (player's number)
			value: (name: String, 
					position: String, 
					sh: String,
					height: Int,
					weight: Int,
					born: String,
					birthplace: String)

		- Accessing a player in the dictionary
			- teamRoster[22] outputs the player's tuple

		- Accessing specific player's info
			-teamRoster[22].name, teamRoster[22].position, etc. 

	c. rosterByAge
		- Did some research on sorting dictionaries.  You can sort a dictionary but it returns
		  an array of tuples.  So accessing a player's info would be 

		  		- teamRosterByAge is the sorted array
		  		- objects in the array are tuples (key: Int, value: TUPLE)
		  		- teamRosterByAge[0] is the first player in the sorted array
		  		- teamRosterByAge[1] is the second player in the sorted array

		  		- Access player's info by 
		  			- teamRosterByAge[0].key (outputs the first player's number)
		  			- teamRosterByAge[0].value (outputs the player's info as a tuple)
		  			- teamRosterByAge[0].value.name, teamRosterByAge[0].value.born, etc. gets you 
		  				their specific information

	d. rosterByCountry - done in the same way as rosterByAge

	e. totalHeight, averageHeight - variables that keeps track of the total height of players.  Divide by the number of players and you get the average height

	f. totalAge, averageAge - variables that keeps track of the total age of players.  Divide by the number of players
					to get the average age.

	g. monthTally - dictionary containing the counts for each month for birthdays

========================================================================================

2. Directions 

	a.  Add the players to the roster 

	b. Find currentDate by using Apple's calendar

	c. Sort roster by age (found how to sort a dictionary by values here: 
		http://studyswift.blogspot.com/2017/05/how-to-sort-array-and-dictionary.html#:~:text=A%20dictionary%20can%20be%20sorted,is%20an%20array%20of%20tuples.

		var rosterByAge = roster.sorted(by: { $0.value.born < $1.value.born})
			- this compares the player's birthday and sorts it in asceding order 

		rosterByAge has the form 
			[(key: Int, value: (TUPLE)), (key: Int, value: (TUPLE)), etc.]

	d. Iterate over roster I'll calculate their age by comparing it to the currentDate. Then I'll add to 
		totalAge. Divide by total players to get average weight.

			currentYear - birthYear.  
			If the current month is before their birth month then -1 

	e. Iterate over the roster. Keep a running tally of which month. Check the count for each month to find 
		the one that shows up most often.

	f. Iterate over roster I'll tally the total height. Divide by # of players to get average height.

	g.  Sort roster by country (I'll sort it like how I sort by age)

		- I need a way to grab the last three chracters from the birthplace 
		- Found suffix() from Apple Docs that does this
		- birthplace.suffix(3) will give me last three letters of birthplace string (i.e. the country)

		var rosterByCountry = roster.sorted(by: {$0.value.birthplace.suffix(3) < $1.value.birthplace.suffix(3)})

		- sorts by country in ascending order

	

	



